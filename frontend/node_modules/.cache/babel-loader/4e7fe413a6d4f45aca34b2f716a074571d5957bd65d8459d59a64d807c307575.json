{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\project01\\\\frontend\\\\src\\\\Components\\\\Login_Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport regImage from '../images/register-image-png.png';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const history = useNavigate();\n  const [user, setUser] = useState({\n    name: '',\n    address: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const passwordsMatch = user.password === user.confirmPassword;\n  const sendRequest = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/register\", {\n        name: user.name,\n        address: user.address,\n        email: user.email,\n        password: user.password\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (passwordsMatch) {\n      sendRequest().then(() => {\n        alert('Registration successful!');\n        history('/login'); // Redirect to login page after successful registration\n      }).catch(error => {\n        console.error('Registration failed:', error);\n        alert('Registration failed. Please try again.');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"l3y1LespByJqr2hFVvOkE5qVrUI=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","regImage","useNavigate","axios","jsxDEV","_jsxDEV","RegisterPage","_s","history","user","setUser","name","address","email","password","confirmPassword","handleChange","e","value","target","prev","passwordsMatch","sendRequest","response","post","data","error","handleSubmit","preventDefault","then","alert","catch","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN STACK/project01/frontend/src/Components/Login_Register/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginPage.css';\r\nimport regImage from '../images/register-image-png.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RegisterPage() {\r\n    const history = useNavigate();\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        address: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser((prev) => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const passwordsMatch = user.password === user.confirmPassword;\r\n\r\n    const sendRequest = async () => {\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/register\", {\r\n                name: user.name,\r\n                address: user.address,\r\n                email: user.email,\r\n                password: user.password\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (passwordsMatch) {\r\n            sendRequest().then(() => {\r\n                alert('Registration successful!');\r\n                history('/login'); // Redirect to login page after successful registration\r\n            }).catch((error) => {\r\n                console.error('Registration failed:', error);\r\n                alert('Registration failed. Please try again.');\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n\r\n\r\n        </div>    \r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGN,WAAW,CAAC,CAAC;EAE7B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC7BW,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,OAAO,CAAEU,IAAI,KAAM;MACf,GAAGA,IAAI;MACP,CAACT,IAAI,GAAGO;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,cAAc,GAAGZ,IAAI,CAACK,QAAQ,KAAKL,IAAI,CAACM,eAAe;EAE7D,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,gCAAgC,EAAE;QAChEb,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,OAAO,EAAEH,IAAI,CAACG,OAAO;QACrBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBC,QAAQ,EAAEL,IAAI,CAACK;MACnB,CAAC,CAAC;MACF,OAAOS,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIV,CAAC,IAAK;IACxBA,CAAC,CAACW,cAAc,CAAC,CAAC;IAClB,IAAIP,cAAc,EAAE;MAChBC,WAAW,CAAC,CAAC,CAACO,IAAI,CAAC,MAAM;QACrBC,KAAK,CAAC,0BAA0B,CAAC;QACjCtB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAACuB,KAAK,CAAEL,KAAK,IAAK;QAChBM,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CI,KAAK,CAAC,wCAAwC,CAAC;MACnD,CAAC,CAAC;IACN;EACJ,CAAC;EAGD,oBAEIzB,OAAA;IAAK4B,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGrB,CAAC;AAId;AAAC9B,EAAA,CA1DQD,YAAY;EAAA,QACDJ,WAAW;AAAA;AAAAoC,EAAA,GADtBhC,YAAY;AA4DrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}